plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=sample(bluecols,1),border=NA,angle=10)
}
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=sample(bluecols,1),border=NA,angle=10,density=sample(c(0.1,0.9),1))
}
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=sample(bluecols,1),border=NA,angle=10)
}
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=sample(bluecols,1),border=NA,angle=10,density=90)
}
joheart_input=rbind(dt$x,dt$y)
joheart_input=cbind(dt$x,dt$y)
dt <- data.table(numbers = seq(0, 2*pi, by = 0.01))
dt <- dt[, x := 16*sin(numbers)^3]
dt <- dt[, y := 13*cos(numbers) - 5*cos(2*numbers) - 2*cos(3*numbers) - cos(4*numbers)]
joheart_input=cbind(dt$x,dt$y)
# for ggplot haters
bluecols=c("royalblue1","royalblue2","royalblue3","royalblue4")
sizes=as.vector(replicate(50,rep(sample(seq(0.1,0.2,0.001),1),nrow(joheart_input)),simplify = T))
xlocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
ylocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
theta=as.vector(replicate(50,rep(sample(seq(-0.4,0.4,0.01),1),nrow(joheart_input)),simplify = T))
xs=rep(joheart_input[,1],50)*sizes
ys=rep(joheart_input[,2],50)*sizes
rotx=cos(theta)*xs-sin(theta)*ys
roty=sin(theta)*xs+cos(theta)*ys
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=sample(bluecols,1),border=NA,angle=10,density=90)
}
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=sample(bluecols,1),border=NA,angle=10,density=120)
}
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=sample(bluecols,1),border=NA,angle=10,density=20)
}
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=sample(bluecols,1),border=NA,angle=10,fillOddEven = T)
}
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=rbg(1,0,0,sample(seq(0,1,0.01),1),border=NA,fillOddEven = T)
}
?rgb
rbg(1,0,0,sample(seq(0,1,0.01),1)
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=rbg(1,0,0,sample(seq(0,1,0.01),1)),border=NA,fillOddEven = T)
}
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=rgb(1,0,0,sample(seq(0,1,0.01),1)),border=NA,fillOddEven = T)
}
# makes heart coordinates
dt <- data.table(numbers = seq(0, 2*pi, by = 0.01))
dt <- dt[, x := 16*sin(numbers)^3]
dt <- dt[, y := 13*cos(numbers) - 5*cos(2*numbers) - 2*cos(3*numbers) - cos(4*numbers)]
joheart_input=cbind(dt$x,dt$y)
# for ggplot haters
bluecols=c("royalblue1","royalblue2","royalblue3","royalblue4")
sizes=as.vector(replicate(50,rep(sample(seq(0.1,0.2,0.001),1),nrow(joheart_input)),simplify = T))
xlocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
ylocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
theta=as.vector(replicate(50,rep(sample(seq(-0.4,0.4,0.01),1),nrow(joheart_input)),simplify = T))
xs=rep(joheart_input[,1],50)*sizes
ys=rep(joheart_input[,2],50)*sizes
rotx=cos(theta)*xs-sin(theta)*ys
roty=sin(theta)*xs+cos(theta)*ys
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=rgb(1,0,0,sample(seq(0,1,0.01),1)),border=NA,fillOddEven = T)
}
joheart_input=cbind(dt$x,dt$y)
FÃ­la Strnda
joheart_input=cbind(dt$x,dt$y)
# makes heart coordinates
dt <- data.table(numbers = seq(0, 2*pi, by = 0.01))
dt <- dt[, x := 16*sin(numbers)^3]
dt <- dt[, y := 13*cos(numbers) - 5*cos(2*numbers) - 2*cos(3*numbers) - cos(4*numbers)]
joheart_input=cbind(dt$x,dt$y)
# for ggplot haters
bluecols=c("royalblue1","royalblue2","royalblue3","royalblue4")
sizes=as.vector(replicate(50,rep(sample(seq(0.1,0.2,0.001),1),nrow(joheart_input)),simplify = T))
xlocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
ylocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
theta=as.vector(replicate(50,rep(sample(seq(-0.4,0.4,0.01),1),nrow(joheart_input)),simplify = T))
xs=rep(joheart_input[,1],50)*sizes
ys=rep(joheart_input[,2],50)*sizes
rotx=cos(theta)*xs-sin(theta)*ys
roty=sin(theta)*xs+cos(theta)*ys
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=rgb(1,0,0,sample(seq(0,1,0.01),1)),border=NA,fillOddEven = T)
}
# makes heart coordinates
dt <- data.table(numbers = seq(0, 2*pi, by = 0.01))
dt <- dt[, x := 16*sin(numbers)^3]
dt <- dt[, y := 13*cos(numbers) - 5*cos(2*numbers) - 2*cos(3*numbers) - cos(4*numbers)]
joheart_input=cbind(dt$x,dt$y)
# for ggplot haters
bluecols=c("royalblue1","royalblue2","royalblue3","royalblue4")
sizes=as.vector(replicate(50,rep(sample(seq(0.1,0.2,0.001),1),nrow(joheart_input)),simplify = T))
xlocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
ylocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
theta=as.vector(replicate(50,rep(sample(seq(-0.4,0.4,0.01),1),nrow(joheart_input)),simplify = T))
xs=rep(joheart_input[,1],50)*sizes
ys=rep(joheart_input[,2],50)*sizes
rotx=cos(theta)*xs-sin(theta)*ys
roty=sin(theta)*xs+cos(theta)*ys
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=rgb(1,0,0,sample(seq(0,1,0.01),1)),border=NA,fillOddEven = T)
}
joheart_input=cbind(dt$x,dt$y)
# makes heart coordinates
dt <- data.table(numbers = seq(0, 2*pi, by = 0.01))
dt <- dt[, x := 16*sin(numbers)^3]
dt <- dt[, y := 13*cos(numbers) - 5*cos(2*numbers) - 2*cos(3*numbers) - cos(4*numbers)]
# for ggplot haters
bluecols=c("royalblue1","royalblue2","royalblue3","royalblue4")
sizes=as.vector(replicate(50,rep(sample(seq(0.1,0.2,0.001),1),nrow(joheart_input)),simplify = T))
xlocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
ylocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
theta=as.vector(replicate(50,rep(sample(seq(-0.4,0.4,0.01),1),nrow(joheart_input)),simplify = T))
xs=rep(joheart_input[,1],50)*sizes
ys=rep(joheart_input[,2],50)*sizes
rotx=cos(theta)*xs-sin(theta)*ys
roty=sin(theta)*xs+cos(theta)*ys
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=rgb(1,0,0,sample(seq(0,1,0.01),1)),border=NA,fillOddEven = T)
}
# makes heart coordinates
dt <- data.table(numbers = seq(0, 2*pi, by = 0.01))
dt <- dt[, x := 16*sin(numbers)^3]
dt <- dt[, y := 13*cos(numbers) - 5*cos(2*numbers) - 2*cos(3*numbers) - cos(4*numbers)]
joheart_input=cbind(dt$x,dt$y)
# for ggplot haters
bluecols=c("royalblue1","royalblue2","royalblue3","royalblue4")
sizes=as.vector(replicate(50,rep(sample(seq(0.1,0.2,0.001),1),nrow(joheart_input)),simplify = T))
xlocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
ylocs=as.vector(replicate(50,rep(sample(c(-20:20),1),nrow(joheart_input)),simplify = T))
theta=as.vector(replicate(50,rep(sample(seq(-0.4,0.4,0.01),1),nrow(joheart_input)),simplify = T))
xs=rep(joheart_input[,1],50)*sizes
ys=rep(joheart_input[,2],50)*sizes
rotx=cos(theta)*xs-sin(theta)*ys
roty=sin(theta)*xs+cos(theta)*ys
plot(rotx+xlocs,roty+ylocs,type='n'
,axes=F,ylab='',xlab='',main="evilidty is truth")
for(i in 1:50){
id=((i-1)*nrow(joheart_input)+1):(i*nrow(joheart_input))
polygon(rotx[id]+xlocs[id],roty[id]+ylocs[id],col=rgb(1,0,0,sample(seq(0,1,0.01),1)),border=NA,fillOddEven = T)
}
theta=seq(0:0.01:1)
plot(theta,dbeta(theta,1,5))
theta
theta=0:0.01:1
plot(theta,dbeta(theta,1,5))
theta=seq(0,0.01,1)
theta=seq(0,1,0.01)
plot(theta,dbeta(theta,1,5))
plot(theta,dbeta(theta,1,4))
plot(theta,dbeta(theta,1,2))
plot(theta,dbeta(theta,4,2))
plot(theta,dbeta(theta,2,2))
plot(theta,dbeta(theta,5,1))
plot(theta,dbeta(theta,2,2))
plot(theta,dbeta(theta,2,3))
plot(theta,dbeta(theta,4,5))
plot(theta,dbeta(theta,4,10))
1-dbeta(0.5,1,5)
dbeta(0.5,1,5)
1-pbeta(0.975,8,16)
qbeta(0.975,8,16)
qbeta(0.1,8,16)
1-pbeta(0.1,8,16)
1-pbeta(0.35,8,16)
1-pbeta(0.35,8,21)
pbeta(0.5,1,5)
1/6
plot(theta,dbeta(theta,1,5))
plot(theta,dbeta(theta,91,11))
?pois
poisson(0.05,59,5)
gamma(0.05,59,5)
dgamma(0.05,59,5)
pgamma(0.05,59,5)
?Gamma
?pgamma
qgamma(0.05,59,5)
qgamma(0.05,67,6)
67/6
P_v= 8e5
P_v= 9e5
Pv= 9e5
rho1=1
h1=0.8
rho2=0.93
h2=1
rho3=13.56
Pat= 1.01e5
h3=(Pv-Pat+rho1*h1+rho2*h2)/rho3
h3
h3=(Pv-Pat+rho1*g*h1+rho2*g*h2)/rho3/g
g=9.81
h3=(Pv-Pat+rho1*g*h1+rho2*g*h2)/rho3/g
h3
h3=(Pv-Pat+rho1*g*h1*1000+rho2*g*h2*1000)/rho3/g/1000
h3
Pv= 0.9e5
rho1=1
h1=0.8
rho2=0.93
h2=1
rho3=13.56
Pat= 1.01e5
g=9.81
h3=(Pv-Pat+rho1*g*h1*1000+rho2*g*h2*1000)/rho3/g/1000
h3
Pv= 1.05e5
rho1=1
h1=0.8
rho2=0.93
h2=1
rho3=13.56
Pat= 1.01e5
g=9.81
h3=(Pv-Pat+rho1*g*h1*1000+rho2*g*h2*1000)/rho3/g/1000
h3
Pv= 1.2e5
rho1=1
h1=0.8
rho2=0.93
h2=1
rho3=13.56
Pat= 1.01e5
g=9.81
h3=(Pv-Pat+rho1*g*h1*1000+rho2*g*h2*1000)/rho3/g/1000
h3
calch3=function(Pv){
rho1=1
h1=0.8
rho2=0.93
h2=1
rho3=13.56
Pat= 1.01e5
g=9.81
h3=(Pv-Pat+rho1*g*h1*1000+rho2*g*h2*1000)/rho3/g/1000
return(h3)
}
calch3(95000)
inf
Inf
a=c(3,4,5,6)
a[1:Inf]
lims=1:Inf
lims=""
a[lims]
a[]
lims=NULL
a[lims]
?NULL
bla="100:200"
test=as.numeric(bla)
?switch
bla="a"
as.numeric(bla)
a=1
class(a)
mode(a)
str(a)
a=1.5
as.integer(a)
a=c(2,4,6,7,3,3)
a[3:1]
?as.numeric
exists()
exists(test)
?exists
?legend
legend.x
legend$x
legend()
legend
legpos="bla"
match.arg(legpos, c("bottomright", "bottom", "bottomleft",
"left", "topleft", "top", "topright", "right", "center"))
legopts=c("bottomright", "bottom", "bottomleft",
"left", "topleft", "top", "topright", "right", "center","none")
is.any(legopts,legpos)
any(legopts,legpos)
?any
any(legopts=legpos)
any(legopts==legpos)
!any(legopts==legpos)
?legend
?stop
stop
.Internal
?readline
int(1)
sample(10)
sample(10,1)
sample(letters,1)
vg_theta=function(alpha,n,ths,thr,h){
theta=thr+(ths-thr)/(1+alpha*abs(h)^n)^(1-1/n)
return(theta)
}
vg_K=function(alpha,n,Ks,h){
K=(1-(abs(h)*alpha)^(n*(1-1/n))*(1+(alpha*abs(h))^n)^(-1+1/n))^2/(1+(abs(h)*alpha)^n)^((1-1/n)/2)
return(K*Ks)
}
h=1:1000
plot(h,vg_theta(0.1,2,0.4,0,h))
plot(log10(h),vg_theta(0.1,2,0.4,0,h),type='l')
h=1:0.5:1000
plot(log10(h),vg_theta(0.1,2,0.4,0,h),type='l',ylab='vol. water content [-]',xlab = log10 -h [cm])
h=seq(1,1000,0.5)
plot(log10(h),vg_theta(0.1,2,0.4,0,h),type='l',ylab='vol. water content [-]',xlab = log10 -h [cm])
h=seq(1,1000,0.5)
plot(log10(h),vg_theta(0.1,2,0.4,0,h),type='l',ylab='vol. water content [-]',xlab = "log10 -h [cm]")
plot(log10(h),vg_theta(0.1,2.4,0.4,0,h),type='l',ylab='vol. water content [-]',xlab = "log10 -h [cm]")
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),type='l',ylab='vol. water content [-]',xlab = "log10 -h [cm]")
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),type='l',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.5,h),type='l',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
plot(log10(h),vg_theta(0.08,1.8,0.45,0.5,h),type='l',ylab='',xlab = "",ylim=c(0,0.55))
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),type='l',ylab='',xlab = "",ylim=c(0,0.55))
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),col='royalblue2',type='l',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.05,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
h=seq(0,1000,0.5)
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),col='royalblue2',type='l',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.05,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
h=seq(0,1000,0.5)
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),col='royalblue2',type='l',main='Retention curve',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.05,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'))
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
h=seq(0,1000,0.5)
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),col='royalblue2',type='l',main='Retention curve',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.05,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
plot(log10(h),vg_K(0.1,2.2,400,h),col='royalblue2',type='l',main='Hydraulic conductivty',ylab='log10 sat. hyd conductivty[cm/d]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_K(0.08,1.8,40,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_K(0.01,1.5,4,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
plot(log10(h),vg_K(0.1,2.2,400,h),col='royalblue2',type='l',main='Hydraulic conductivty',ylab='log10 sat. hyd conductivty[cm/d]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_K(0.08,1.8,40,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,3))
par(new=T)
plot(log10(h),vg_K(0.01,1.5,4,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,3))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
plot(log10(h),vg_K(0.1,2.2,400,h),col='royalblue2',type='l',main='Hydraulic conductivty',ylab='log10 sat. hyd conductivty[cm/d]',xlab = "log10 -h [cm]",ylim=c(0,3))
par(new=T)
plot(log10(h),vg_K(0.08,1.8,40,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,3))
par(new=T)
plot(log10(h),vg_K(0.01,1.5,4,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,3))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
plot(log10(h),log10(vg_K(0.1,2.2,400,h)),col='royalblue2',type='l',main='Hydraulic conductivty',ylab='log10 sat. hyd conductivty[cm/d]',xlab = "log10 -h [cm]",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.08,1.8,40,h)),col='darkred',type='l',ylab='',xlab = "",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.01,1.5,4,h)),col='darkorange',type='l',ylab='',xlab = "",ylim=c(-5,3))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
setwd("~/Documents/CULS/tutorial/drutes_tutorials/Infiltration Tutorial1/Figures")
png('retention_curve.png')
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),col='royalblue2',type='l',main='Retention curve',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.05,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
png('cond_hyd_curve.png')
plot(log10(h),log10(vg_K(0.1,2.2,400,h)),col='royalblue2',type='l',main='Hydraulic conductivty',ylab=expression(paste('log10 sat. hyd. conductivty [cm',d^-1,']')),xlab = "log10 -h [cm]",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.08,1.8,40,h)),col='darkred',type='l',ylab='',xlab = "",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.01,1.5,4,h)),col='darkorange',type='l',ylab='',xlab = "",ylim=c(-5,3))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
png('retention_curve.png',width = 800, height = 600, units = "px")
par(cex=1.3)
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),col='royalblue2',type='l',main='Retention curve',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.05,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
png('cond_hyd_curve.png',width = 800, height = 600, units = "px")
par(cex=1.3)
plot(log10(h),log10(vg_K(0.1,2.2,400,h)),col='royalblue2',type='l',main='Hydraulic conductivty',ylab=expression(paste('log10 sat. hyd. conductivty [cm',d^-1,']')),xlab = "log10 -h [cm]",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.08,1.8,40,h)),col='darkred',type='l',ylab='',xlab = "",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.01,1.5,4,h)),col='darkorange',type='l',ylab='',xlab = "",ylim=c(-5,3))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
png('retention_curve.png',width = 600, height = 400, units = "px")
par(cex=1.3)
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),col='royalblue2',type='l',main='Retention curve',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.05,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
png('cond_hyd_curve.png',width = 600, height = 400, units = "px")
par(cex=1.3)
plot(log10(h),log10(vg_K(0.1,2.2,400,h)),col='royalblue2',type='l',main='Hydraulic conductivty',ylab=expression(paste('log10 sat. hyd. conductivty [cm',d^-1,']')),xlab = "log10 -h [cm]",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.08,1.8,40,h)),col='darkred',type='l',ylab='',xlab = "",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.01,1.5,4,h)),col='darkorange',type='l',ylab='',xlab = "",ylim=c(-5,3))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
png('retention_curve.png',width = 400, height = 400, units = "px")
par(cex=1.3)
plot(log10(h),vg_theta(0.1,2.2,0.4,0,h),col='royalblue2',type='l',main='Retention curve',ylab='vol. water content [-]',xlab = "log10 -h [cm]",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.08,1.8,0.45,0.05,h),col='darkred',type='l',ylab='',xlab = "",ylim=c(0,0.55))
par(new=T)
plot(log10(h),vg_theta(0.01,1.5,0.5,0.1,h),col='darkorange',type='l',ylab='',xlab = "",ylim=c(0,0.55))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
png('cond_hyd_curve.png',width = 400, height = 400, units = "px")
par(cex=1.3)
plot(log10(h),log10(vg_K(0.1,2.2,400,h)),col='royalblue2',type='l',main='Hydraulic conductivty',ylab=expression(paste('log10 sat. hyd. conductivty [cm',d^-1,']')),xlab = "log10 -h [cm]",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.08,1.8,40,h)),col='darkred',type='l',ylab='',xlab = "",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.01,1.5,4,h)),col='darkorange',type='l',ylab='',xlab = "",ylim=c(-5,3))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
png('cond_hyd_curve.png',width = 400, height = 400, units = "px")
par(cex=1.3)
plot(log10(h),log10(vg_K(0.1,2.2,400,h)),col='royalblue2',type='l',main='Hydraulic conductivty',ylab=expression(paste('log10 sat. hyd. conductivty [cm ',d^-1,']')),xlab = "log10 -h [cm]",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.08,1.8,40,h)),col='darkred',type='l',ylab='',xlab = "",ylim=c(-5,3))
par(new=T)
plot(log10(h),log10(vg_K(0.01,1.5,4,h)),col='darkorange',type='l',ylab='',xlab = "",ylim=c(-5,3))
leg.txt=c('sand','silt','clay')
legend('topright',leg.txt,lty=1,col=c('royalblue2','darkred','darkorange'),bty='n')
dev.off()
